{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "I learned about hejhdsk. Yay!\n"
     ]
    }
   ],
   "source": [
    "#8.1\n",
    "def display_message(learned):\n",
    "    print (\"I learned about \" + learned + \". Yay!\")\n",
    "    \n",
    "display_message(\"hejhdsk\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#8.6-8\n",
    "def city_country(city,country):\n",
    "    print (city + country)\n",
    "\n",
    "def make_album(album_name, album_title, album_track=\"\"):\n",
    "    \n",
    "    if album_track:\n",
    "        album={\"name\":album_name,\"title\":album_title,\"track\":album_track} \n",
    "\n",
    "    else:\n",
    "        album={\"name\":album_name,\"title\":album_title}\n",
    "\n",
    "    return album\n",
    "\n",
    "stuff = make_album(\"fds\", \"abs\", 8)\n",
    "print(stuff)\n",
    "\n",
    "while True:\n",
    "    a_name=input(\"Album name\")\n",
    "    a_title=input(\"Album title\")\n",
    "    if a_name or a_title == \"q\":\n",
    "        break\n",
    "\n",
    "    stuff2 = make_album(a_name, a_title)\n",
    "    print(stuff2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tom\n",
      "alex\n",
      "sam\n"
     ]
    }
   ],
   "source": [
    "#8.9-11\n",
    "def show_magicians(names):\n",
    "    for x in names:\n",
    "        print(x)\n",
    "        \n",
    "magicians=(\"tom\", \"alex\", \"sam\")\n",
    "show_magicians(magicians)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [],
   "source": [
    "#\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [],
   "source": [
    "#\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
